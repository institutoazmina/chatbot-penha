version: "3.5"
networks:
    api_analytics:
        driver: bridge
        name: api_analytics_network

    quiz_database:
        driver: bridge
        name: quiz_database_network

    database_analytics:
        driver: bridge
        name: database_analytics_network

    external_network:
        name: external_network

    cache:
        driver: bridge
        name: cache_network

volumes:
    redis_data:

services:
    analytics_db:
        container_name: analytics_db
        image: postgres:13.3
        volumes:
          - ${ANALYTICS_POSTGRES_DIR}:/var/lib/postgresql/data
        environment:
          POSTGRES_PASSWORD: "${DB_PASSWORD}"
          POSTGRES_USER: "${DB_USER}"
          POSTGRES_DB: "${DB_NAME}_analytics"
        networks:
          - database_analytics
        logging:
          driver: "json-file"
          options:
            max-file: '100'
            max-size: 1m
        restart: unless-stopped

    quiz_db:
        container_name: quiz_db
        image: postgres:13.3
        volumes:
          - ${QUIZ_POSTGRES_DIR}:/var/lib/postgresql/data
        environment:
          POSTGRES_PASSWORD: "${DB_PASSWORD}"
          POSTGRES_USER: "${DB_USER}"
          POSTGRES_DB: "${DB_NAME}_quiz"
        networks:
          - quiz_database
        logging:
          driver: "json-file"
          options:
            max-file: '100'
            max-size: 1m
        restart: unless-stopped

    redis:
        image: docker.io/bitnami/redis:6.2
        container_name: redis
        environment:
          REDIS_PASSWORD: "${REDIS_PASSWORD}"
          REDIS_DISABLE_COMMANDS: "FLUSHDB,FLUSHALL"
        networks:
          - cache
        expose:
          - "6379"
        volumes:
          - redis_data:/bitnami/redis/data
        logging:
          driver: "json-file"
          options:
            max-file: '100'
            max-size: 1m

    analytics_api:
        build: "${ANALYTICS_SRC}"
        container_name: analytics_api
        restart: unless-stopped
        depends_on:
            - analytics_db
        environment:
            PORT: 2049

            DB_HOST: analytics_db
            DB_PORT: 5432
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: "${DB_NAME}_analytics"
        logging:
          driver: "json-file"
          options:
            max-file: '100'
            max-size: 1m
        expose:
            - 2049
        networks:
            - database_analytics
            - api_analytics

    directus:
        container_name: directus
        image: directus/directus:v9.0.0-rc.69
        restart: unless-stopped
        networks:
            - quiz_database
            - external_network
        depends_on:
            - quiz_db
            - quiz_api
        ports:
          - "172.17.0.1:${DIRECTUS_API_LISTEN}:8055"
        environment:
          PUBLIC_URL: "${DIRECTUS_PUBLIC_URL}"
          KEY: "${DIRECTUS_KEY}"
          SECRET: "${DIRECTUS_SECRET}"
          DB_CLIENT: 'pg'
          DB_HOST: quiz_db
          DB_PORT: 5432
          DB_DATABASE: "${DB_NAME}_quiz"
          DB_USER: "${DB_USER}"
          DB_PASSWORD: "${DB_PASSWORD}"
          EMAIL_FROM: "${SMTP_FROM}"
          EMAIL_TRANSPORT: 'smtp'
          EMAIL_SMTP_HOST: "${SMTP_HOST}"
          EMAIL_SMTP_PORT: '465'
          EMAIL_SMTP_USER: "${SMTP_USER}"
          EMAIL_SMTP_PASSWORD: "${SMTP_PASSWORD}"
          EMAIL_SMTP_SECURE: 'true'

    quiz_api:
        image: azminas/quiz_api
        container_name: quiz_api
        restart: unless-stopped
        expose:
          - "8080"
        environment:
          REDIS_SERVER: redis:6379
          REDIS_PASSWORD: ${REDIS_PASSWORD}
          REDIS_NS: "API"
          POSTGRESQL_HOST: quiz_db
          POSTGRESQL_PORT: 5432
          POSTGRESQL_DBNAME: "${DB_NAME}_quiz"
          POSTGRESQL_USER: "${DB_USER}"
          POSTGRESQL_PASSWORD: "${DB_PASSWORD}"
          API_PORT: 8080
          API_WORKERS: "${API_WORKERS}"
        depends_on:
            - redis
            - quiz_db
        volumes:
            - ${QUIZ_DATA_DIR}:/data/
            - ${QUIZ_SRC}:/src/
        networks:
            - external_network
            - quiz_database
            - cache


    webhook_api:
        build: "${WEBHOOK_SRC}"
        container_name: webhook_api
        restart: unless-stopped
        depends_on:
            - quiz_api
            - analytics_api
        environment:
            PORT: 8080
            TWITTER_CONSUMER_SECRET: ${TWITTER_CONSUMER_SECRET}
            TWITTER_CONSUMER_KEY: ${TWITTER_CONSUMER_KEY}
            TWITTER_ACCESS_TOKEN: ${TWITTER_ACCESS_TOKEN}
            TWITTER_ACCESS_TOKEN_SECRET: ${TWITTER_ACCESS_TOKEN_SECRET}

            REDIS_HOST: redis
            REDIS_PORT: "6379"
            REDIS_PASSWORD: ${REDIS_PASSWORD}

            ANALYTICS_API_URL: http://azmina_chatbot_analytics:2049

            PENHAS_API_URL: http://quiz_api:8080
            PENHAS_API_TOKEN: ${PENHAS_API_TOKEN}
            LOG_DIR: /tmp/log
        ports:
            - 172.17.0.1:${WEBHOOK_API_LISTEN}:8080
        volumes:
            - ${LOG_DIR}:/tmp/log
        networks:
            - external_network
            - cache
            - api_analytics
        logging:
          driver: "json-file"
          options:
            max-file: '100'
            max-size: 1m